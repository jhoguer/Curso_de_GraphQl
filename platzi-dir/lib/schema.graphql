"Valida los tipos de nivel"
enum Level {
  principiante
  intermedio
  avanzado
}

union GlobalSearch = Course | Monitor | Student

type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String @deprecated
  people: [Student]
  level: Level
}

interface Person {
  _id: ID!
  name: String!
  email: String!
}

type Student implements Person {
  _id: ID!
  name: String!
  email: String!
  avatar: String
}

type Monitor implements Person {
  _id: ID!
  name: String!
  email: String!
  phone: String
}

type Query {
  "Devuelve todos los cursos"
  getCourses: [Course],
  "Devuelve un curso"
  getCourse(id: ID!): Course,
  "Devuelve todos los estudiantes"
  getPeople: [Person],
  "Devuelve un estudiante"
  getPerson(id: ID!): Person,
  "Ejecuta una busqueda global"
  searchItems(keyword: String): [GlobalSearch]
}

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
  level: Level
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input PersonInput {
  name: String!
  email: String!
  phone: String
  avatar: String
}

input PersonEditInput {
  name: String
  email: String
  phone: String
  avatar:String
}

type Mutation {
  "Crea un curso"
  createCourse( input: CourseInput! ): Course,
  "Edita un curso"
  editCourse( _id: ID!, input: CourseEditInput ): Course,
  "Eliminar un curso"
  deleteCourse( _id: ID!): Boolean,
  "Crea un estudiante"
  createPerson( input: PersonInput! ): Person,
  "Edita un estudiante"
  editPerson( _id: ID!, input: PersonEditInput ): Person,
  "Eliminar un estudiante"
  deleteStudent( _id: ID!): Boolean
  "Agrega una persona a un curso"
  addPeople( courseId: ID!, personId: ID!): Course
}